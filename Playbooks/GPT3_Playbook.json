{
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion":  "1.0.0.0",
    "metadata":  {
        "title":  "",
        "description":  "",
        "prerequisites":  "",
        "postDeployment":  [
        ],
        "prerequisitesDeployTemplateFile":  "",
        "lastUpdateTime":  "",
        "entities":  [
        ],
        "tags":  [
        ],
        "support":  {
            "tier":  "community",
            "armtemplate":  "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
        },
        "author":  {
            "name":  ""
        }
    },
    "parameters":  {
        "PlaybookName":  {
            "defaultValue":  "ChatGPT-Playbook",
            "type":  "string"
        }
    },
    "variables":  {
        "MicrosoftSentinelConnectionName":  "[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
        "OpenaiipConnectionName":  "[concat('Openaiip-', parameters('PlaybookName'))]"
    },
    "resources":  [
        {
            "properties":  {
                "provisioningState":  "Succeeded",
                "state":  "Enabled",
                "definition":  {
                    "$schema":  "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion":  "1.0.0.0",
                    "parameters":  {
                        "$connections":  {
                            "defaultValue":  {
                            },
                            "type":  "Object"
                        }
                    },
                    "triggers":  {
                        "Microsoft_Sentinel_incident":  {
                            "type":  "ApiConnectionWebhook",
                            "inputs":  {
                                "body":  {
                                    "callback_url":  "@{listCallbackUrl()}"
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path":  "/incident-creation"
                            }
                        }
                    },
                    "actions":  {
                        "Add_comment":  {
                            "foreach":  "@body('Playbook_steps_')?['choices']",
                            "actions":  {
                                "Add_comment_to_incident_(V3)":  {
                                    "runAfter":  {
                                    },
                                    "type":  "ApiConnection",
                                    "inputs":  {
                                        "body":  {
                                            "incidentArmId":  "@triggerBody()?['object']?['id']",
                                            "message":  "\u003cp\u003e@{items('Add_comment')?['text']}\u003c/p\u003e"
                                        },
                                        "host":  {
                                            "connection":  {
                                                "name":  "@parameters('$connections')['azuresentinel_4']['connectionId']"
                                            }
                                        },
                                        "method":  "post",
                                        "path":  "/Incidents/Comment"
                                    }
                                }
                            },
                            "runAfter":  {
                                "Playbook_steps_":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Foreach"
                        },
                        "For_each":  {
                            "foreach":  "@body('GPT3_Completes_your_prompt')?['choices']",
                            "actions":  {
                                "Add_comment_to_incident_(V3)_2":  {
                                    "runAfter":  {
                                    },
                                    "type":  "ApiConnection",
                                    "inputs":  {
                                        "body":  {
                                            "incidentArmId":  "@triggerBody()?['object']?['id']",
                                            "message":  "\u003cp\u003e@{items('For_each')?['text']}\u003c/p\u003e"
                                        },
                                        "host":  {
                                            "connection":  {
                                                "name":  "@parameters('$connections')['azuresentinel_4']['connectionId']"
                                            }
                                        },
                                        "method":  "post",
                                        "path":  "/Incidents/Comment"
                                    }
                                }
                            },
                            "runAfter":  {
                                "GPT3_Completes_your_prompt":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Foreach"
                        },
                        "GPT3_Completes_your_prompt":  {
                            "runAfter":  {
                                "Add_comment":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "body":  {
                                    "best_of":  1,
                                    "frequency_penalty":  0,
                                    "max_tokens":  100,
                                    "n":  1,
                                    "presence_penalty":  0,
                                    "prompt":  "Based on the incident title: @{triggerBody()?['object']?['properties']?['title']} with the entities: @{triggerBody()?['object']?['properties']?['relatedEntities']} provide me one to three KQL hunting Queries. ",
                                    "temperature":  1
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['openaiip']['connectionId']"
                                    }
                                },
                                "method":  "post",
                                "path":  "/v1/engines/text-davinci-003/completions"
                            }
                        },
                        "Playbook_steps_":  {
                            "runAfter":  {
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "body":  {
                                    "best_of":  1,
                                    "frequency_penalty":  0,
                                    "max_tokens":  100,
                                    "n":  1,
                                    "presence_penalty":  0,
                                    "prompt":  "Help me Incident Management in a step by step bullet list on Incident @{triggerBody()?['object']?['properties']?['title']} and  incident entities are @{triggerBody()?['object']?['properties']?['relatedEntities']} ",
                                    "temperature":  1
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['openaiip']['connectionId']"
                                    }
                                },
                                "method":  "post",
                                "path":  "/v1/engines/text-davinci-003/completions"
                            }
                        }
                    },
                    "outputs":  {
                    }
                },
                "parameters":  {
                    "$connections":  {
                        "value":  {
                            "azuresentinel":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "connectionName":  "[variables('MicrosoftSentinelConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]",
                                "connectionProperties":  {
                                    "authentication":  {
                                        "type":  "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "azuresentinel_4":  {
                                "connectionId":  "/subscriptions/9152fcb9-4490-41e6-905e-d170358f49f2/resourceGroups/production_Monitoring_And_Automation/providers/Microsoft.Web/connections/azuresentinel-1",
                                "connectionName":  "azuresentinel-1",
                                "id":  "/subscriptions/9152fcb9-4490-41e6-905e-d170358f49f2/providers/Microsoft.Web/locations/southcentralus/managedApis/azuresentinel"
                            },
                            "openaiip":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('OpenaiipConnectionName'))]",
                                "connectionName":  "[variables('OpenaiipConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Openaiip')]"
                            }
                        }
                    }
                }
            },
            "name":  "[parameters('PlaybookName')]",
            "type":  "Microsoft.Logic/workflows",
            "location":  "[resourceGroup().location]",
            "identity":  {
                "type":  "SystemAssigned"
            },
            "tags":  {
                "hidden-SentinelTemplateName":  "ChatGPT-Playbook",
                "hidden-SentinelTemplateVersion":  "1.0"
            },
            "apiVersion":  "2017-07-01",
            "dependsOn":  [
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('OpenaiipConnectionName'))]"
            ]
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('MicrosoftSentinelConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('MicrosoftSentinelConnectionName')]",
                "customParameterValues":  {
                },
                "parameterValueType":  "Alternative",
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]"
                }
            }
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('OpenaiipConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('OpenaiipConnectionName')]",
                "customParameterValues":  {
                },
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Openaiip')]"
                }
            }
        }
    ]
}
